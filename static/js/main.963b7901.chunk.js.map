{"version":3,"sources":["components/SingleCard.js","App.js","index.js"],"names":["SingleCard","card","handleChoice","flipped","disabled","className","alt","src","onClick","cardImages","matched","App","useState","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","setDisabled","shuffleCards","shuffledCards","sort","Math","random","map","id","useEffect","prevCards","setTimeout","prevTurns","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAGe,SAASA,EAAT,GAA2D,IAAtCC,EAAqC,EAArCA,KAAKC,EAAgC,EAAhCA,aAAaC,EAAmB,EAAnBA,QAAQC,EAAW,EAAXA,SAQ5D,OACE,qBAAKC,UAAU,OAAf,SACE,sBAAKA,UAAWF,EAAU,UAAY,GAAtC,UACE,qBAAKE,UAAU,QAAQC,IAAI,aAAaC,IAAKN,EAAKM,MAClD,qBACEF,UAAU,OACVC,IAAI,YACJC,IAAI,kBACJC,QAdY,WACdJ,GACFF,EAAaD,WCFnB,IAAMQ,EAAW,CACf,CAAC,IAAM,oBAAqBC,SAAQ,GACpC,CAAC,IAAM,oBAAqBA,SAAQ,GACpC,CAAC,IAAM,kBAAmBA,SAAQ,GAClC,CAAC,IAAM,oBAAqBA,SAAQ,GACpC,CAAC,IAAM,oBAAqBA,SAAQ,GACpC,CAAC,IAAM,mBAAoBA,SAAQ,IAoFtBC,MAjFf,WAAgB,IAAD,EAEYC,mBAAS,IAFrB,mBAENC,EAFM,KAEAC,EAFA,OAGaF,mBAAS,GAHtB,mBAGNG,EAHM,KAGCC,EAHD,OAIoBJ,mBAAS,MAJ7B,mBAINK,EAJM,KAIIC,EAJJ,OAKoBN,mBAAS,MAL7B,mBAKNO,EALM,KAKIC,EALJ,OAMkBR,oBAAS,GAN3B,mBAMNR,EANM,KAMGiB,EANH,KASPC,EAAe,WACnB,IAAMC,EAAgB,UAAId,EAAcA,GACrCe,MAAK,kBAAMC,KAAKC,SAAW,MAC3BC,KAAI,SAAA1B,GAAI,kCAASA,GAAT,IAAc2B,GAAGH,KAAKC,cACjCR,EAAa,MACbE,EAAa,MACbN,EAASS,GACTP,EAAS,IAaLd,EAAe,SAACD,GACpBgB,EAAYG,EAAanB,GAAQiB,EAAajB,IA4BhD,OAxBA4B,qBAAU,WACLZ,GAAaE,IACdE,GAAY,GACTJ,EAAUV,MAAMY,EAAUZ,KAC3BO,GAAS,SAAAgB,GACP,OAAOA,EAAUH,KAAI,SAAA1B,GACnB,OAAGA,EAAKM,MAAMU,EAAUV,IACf,2BAAIN,GAAX,IAAgBS,SAAQ,IAEjBT,QAKf8B,YAAW,kBA3Bbb,EAAa,MACbE,EAAa,MACbJ,GAAS,SAAAgB,GAAS,OAAEA,EAAU,UAC9BX,GAAY,KAwBiB,QAE7B,CAACJ,EAAUE,IAIbU,qBAAU,WACRP,MACA,IAGA,sBAAKjB,UAAU,MAAf,UACE,6CACA,wBAAQG,QAASc,EAAjB,sBAEA,qBAAKjB,UAAU,YAAf,SACGQ,EAAMc,KAAI,SAAA1B,GACT,OACA,cAAC,EAAD,CAEEA,KAAMA,EACNC,aAAcA,EACdC,QAASF,IAAOgB,GAAahB,IAAOkB,GAAalB,EAAKS,QACtDN,SAAUA,GAJLH,EAAK2B,SAQhB,wCAAWb,SCpFjBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.963b7901.chunk.js","sourcesContent":["\r\nimport './SingleCard.css';\r\n\r\nexport default function SingleCard({card,handleChoice,flipped,disabled}) {\r\n\r\n  const handleClick = () => {\r\n    if(!disabled){\r\n      handleChoice(card);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className={flipped ? 'flipped' : ''}>\r\n        <img className=\"front\" alt=\"card front\" src={card.src} />\r\n        <img \r\n          className=\"back\" \r\n          alt=\"card back\" \r\n          src='./img/cover.png' \r\n          onClick={handleClick}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react';\nimport './App.css';\n\nimport SingleCard from './components/SingleCard';\n\nconst cardImages=[\n  {\"src\":\"/img/helmet-1.png\", matched:false},\n  {\"src\":\"/img/potion-1.png\", matched:false},\n  {\"src\":\"/img/ring-1.png\", matched:false},\n  {\"src\":\"/img/scroll-1.png\", matched:false},\n  {\"src\":\"/img/shield-1.png\", matched:false},\n  {\"src\":\"/img/sword-1.png\", matched:false},\n]\n\nfunction App() {\n\n  const [cards,setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne,setChoiceOne] = useState(null);\n  const [choiceTwo,setChoiceTwo] = useState(null);\n  const [disabled,setDisabled] = useState(false);\n\n  // shuffle cards\n  const shuffleCards = () => {\n    const shuffledCards = [...cardImages,...cardImages]\n      .sort(() => Math.random() - 0.5)\n      .map(card => ({...card,id:Math.random()}));\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setCards(shuffledCards);\n    setTurns(0);\n  }\n\n  // reset choices , increase turn\n  const resetTurn = () =>{\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns=>prevTurns+1);\n    setDisabled(false);\n  }\n\n\n  // handle a choice\n  const handleChoice = (card) => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  }\n\n  // compare selected cards\n  useEffect(()=>{\n    if(choiceOne && choiceTwo){\n      setDisabled(true)\n      if(choiceOne.src===choiceTwo.src){\n        setCards(prevCards=>{\n          return prevCards.map(card=>{\n            if(card.src===choiceOne.src){\n              return {...card,matched:true}\n            }else{\n              return card\n            }\n          })\n        });\n      }\n      setTimeout(()=>resetTurn(),1000)\n    }\n  },[choiceOne,choiceTwo])\n\n  // starta a new game automatically\n\n  useEffect(()=>{\n    shuffleCards();\n  },[])\n\n  return (\n    <div className=\"App\">\n      <h1>Magic Match</h1>\n      <button onClick={shuffleCards}>New Game</button>\n\n      <div className=\"card-grid\">\n        {cards.map(card => {\n          return (\n          <SingleCard \n            key={card.id} \n            card={card} \n            handleChoice={handleChoice} \n            flipped={card===choiceOne || card===choiceTwo || card.matched} \n            disabled={disabled}\n          />)\n        })}\n      </div>\n      <p>Turns: {turns}</p>\n\n  </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}